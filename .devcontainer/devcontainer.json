{
	"name": "Kubernetes-in-Codespaces",
	"dockerFile": "Dockerfile",

	// do not change these if you want Docker in Docker support
	"runArgs": ["--init", "--privileged"],
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind" ],
	"overrideCommand": false,

	// some base images require a specific user name
	"remoteUser": "vscode",

	"hostRequirements": {
		"cpus": 4
	},

	// forward ports for the app
	"forwardPorts": [
		30000,
		30080,
		31080,
		32000
	],

	// add labels
	"portsAttributes": {
		"30000": { "label": "Prometheus" },
		"30080": { "label": "IMDb App" },
		"31080": { "label": "Heartbeat" },
		"32000": { "label": "Grafana" }
	},

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-azuretools.vscode-docker"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "yaml.schemas": {
          "https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.18.0-standalone-strict/all.json": "*.yaml,*.yml"
        }
      }
    }
  },
  

	"waitFor": "postCreateCommand",

	// Use 'onCreateCommand' to run commands as part of container creation.
	"onCreateCommand": "/bin/bash -c .devcontainer/on_create.sh",

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "/bin/bash -c .devcontainer/post_create.sh",

	// Use 'postStartCommand' to run commands after the container starts.
	"postStartCommand": "/bin/bash -c .devcontainer/post_start.sh"
}